(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{431:function(t,a,s){"use strict";s.r(a);var r=s(56),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"浏览器执行原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器执行原理"}},[t._v("#")]),t._v(" 浏览器执行原理")]),t._v(" "),s("p",[t._v("从输入URL到页面加载，就可以看到页面的渲染过程。")]),t._v(" "),s("h3",{attrs:{id:"浏览器的主要构成部分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的主要构成部分"}},[t._v("#")]),t._v(" 浏览器的主要构成部分")]),t._v(" "),s("ul",[s("li",[t._v("用户界面")]),t._v(" "),s("li",[t._v("浏览器引擎")]),t._v(" "),s("li",[t._v("渲染引擎(内核)")]),t._v(" "),s("li",[t._v("JS引擎")])]),t._v(" "),s("h3",{attrs:{id:"渲染引擎-浏览器内核、浏览器引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染引擎-浏览器内核、浏览器引擎"}},[t._v("#")]),t._v(" 渲染引擎(浏览器内核、浏览器引擎)")]),t._v(" "),s("ul",[s("li",[t._v("Trident: IE4-IE11,  Edge是用的Blink")]),t._v(" "),s("li",[t._v("Gecko: Firefox")]),t._v(" "),s("li",[t._v("Webkit: 苹果基于KHTML开发, Safari、Google之前也在使用 Webkit")]),t._v(" "),s("li",[t._v("Blink: 是 Webkit 的一个分支，由 Google 开发，现应用于 Google、Edge、Opera 等")])]),t._v(" "),s("h3",{attrs:{id:"js-引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-引擎"}},[t._v("#")]),t._v(" JS 引擎")]),t._v(" "),s("p",[t._v("编写的 JS，实际上是需要被 CPU 执行的；CPU 只认识自己的指令集（机器语言）")]),t._v(" "),s("ul",[s("li",[t._v("SpiderMonkey: js作者开发。")]),t._v(" "),s("li",[t._v("Chakra: 微软开发，IE。")]),t._v(" "),s("li",[t._v("JavaScriptCore: Webkit中内置的，Apple公司开发。")]),t._v(" "),s("li",[t._v("V8: Google开发的js引擎。\n...")])]),t._v(" "),s("h3",{attrs:{id:"浏览器内核和js引擎的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器内核和js引擎的关系"}},[t._v("#")]),t._v(" 浏览器内核和JS引擎的关系")]),t._v(" "),s("p",[t._v("以 WebKit 为例，WebKie主要由两部分组成")]),t._v(" "),s("ul",[s("li",[t._v("WebCore: 负责HTML解析、布局、渲染等相关工作")]),t._v(" "),s("li",[t._v("JavaScriptCore: 解析、执行JS代码")])]),t._v(" "),s("h3",{attrs:{id:"v8引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v8引擎"}},[t._v("#")]),t._v(" V8引擎")]),t._v(" "),s("p",[t._v("V8是用C++编写的Google开源高性能JS和WebAssembly引擎，用于Chrome和Node等, 实现ECMAScript.\nV8可以独立运行，也可以潜入到C++应用程序中。")]),t._v(" "),s("h3",{attrs:{id:"v8架构图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v8架构图"}},[t._v("#")]),t._v(" V8架构图")]),t._v(" "),s("img",{attrs:{src:"/browser/v8.png",width:"800",height:"500"}}),t._v(" "),s("ol",[s("li",[t._v("进行词法分析和语法分析:")])]),t._v(" "),s("ul",[s("li",[t._v("词法分析 tokens  [{type: 'keyword', name: 'foo'}, {type: '关键字', name: 'for'}]")]),t._v(" "),s("li",[t._v("语法分析 分析语法结构")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("p",[t._v("AST树 Tokens 经过Parser和PreParser, 会被转为 AST 树")])]),t._v(" "),s("li",[s("p",[t._v("转为字节码\n因为 JS 作用的环境不一定；windows/mac/linux 的浏览器上面；跑在不同的环境有不同的CPU架构；能够执行的机器指令是不一样的；V8会将字节码转为不同平台的机器码")])]),t._v(" "),s("li",[s("p",[t._v("TuboFan 来收集执行信息, 标记 hot 热点代码, 标记为 hot 之后，可以直接转为高效率的机器码")])]),t._v(" "),s("li",[s("p",[t._v("Deoptimization 反优化，会将机器指令重新编译为字节码；")])])]),t._v(" "),s("h3",{attrs:{id:"js如何被执行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js如何被执行"}},[t._v("#")]),t._v(" JS如何被执行")]),t._v(" "),s("ol",[s("li",[t._v("Parse 解析的时候就会创建一个 GlobalObject(GO) = {}")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" globalObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"类"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'类'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"函数"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("window")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" globalObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("代码如何被运行\nV8需要将代码放置到执行上下文中运行; 为了全局代码能够正常的执行，会创建一个全局上下文")])]),t._v(" "),s("p",[t._v("当前上下文的 VO 变量对象会指向 GO； 执行代码通过 VO 找到 GO，修改 GO 的值")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("函数如何执行\n编译到函数，并不会执行，而是先会开辟一块内存空, GlobalObject 的 foo 指向内存地址；内存地址包括函数的执行代码块和[[scope]]: parent scope")])]),t._v(" "),s("p",[t._v("执行函数，会在上下文栈中先创建一个函数执行上下文,FEC；当前上下文的 VO 变量对象会指向 AO 对象(Activation Object活跃对象：来收集函数内部参数变量)。")]),t._v(" "),s("p",[t._v("然后执行代码，去 VO 去查找变量；执行完之后就会出栈；对应 AO 也会被销毁")]),t._v(" "),s("p",[t._v("函数在激活后有 scope chain: VO + parent scope 就是作用域链")]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("AO环境")])]),t._v(" "),s("ul",[s("li",[t._v("ES5之前说法\n每创建一个执行上下文都会关联到变量对象上VO， 声明变量或函数会作为属性添加到VO上,参数也会被添加到VO上.")]),t._v(" "),s("li",[t._v("ES5之后说法\n每创建一个执行上下文都会关联到变量环境中，在执行代码中变量和函数的声明会作为环境记录添加到变量环境中。")])]),t._v(" "),s("h3",{attrs:{id:"闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),s("ol",[s("li",[t._v("维基百科")])]),t._v(" "),s("ul",[s("li",[t._v("是在支持头等函数的编程语言中，实现词法绑定的一种技术；")]),t._v(" "),s("li",[t._v("闭包在实现上是一个结构体，它存储了一个函数和一个关联环境")]),t._v(" "),s("li",[t._v("闭包跟函数最大的区别在于，当捕捉闭包的时候，它的自由变量会在捕捉时被确定，这样即使脱离了捕捉时的上下文，它也能照常运行。")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("MDN")])]),t._v(" "),s("ul",[s("li",[t._v("一个函数和对其周围状态（词法环境）的引用绑在一起（或者说函数被引用包围），这样的组合就是闭包。")]),t._v(" "),s("li",[t._v("闭包让你可以在一个内层函数中访问到外层函数的作用域;")]),t._v(" "),s("li",[t._v("在 js 中，每当创建一个函数，闭包就会在函数创建的同时被创建出来")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("总结")])]),t._v(" "),s("ul",[s("li",[t._v("一个普通的函数，如果它可以访问外层作用域的自由变量，那么这个函数就是一个闭包。")]),t._v(" "),s("li",[t._v("广义上讲：js的函数都是闭包")]),t._v(" "),s("li",[t._v("狭义上讲：js中一个函数，如果访问了外层作用域的变量，那么它就是一个闭包。")])]),t._v(" "),s("h3",{attrs:{id:"闭包内存图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包内存图"}},[t._v("#")]),t._v(" 闭包内存图")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",[s("li",[t._v("执行栈中：全局执行上下文、函数执行上下文 foo； 堆内存图中：GO对象(0xa00); foo(0x100)parentScope，执行题； AO: 0x200；")])]),t._v(" "),s("p",[t._v("函数执行上下文 foo 指向 AO(0x200) 全局执行上下文指向GO(0xa00)")]),t._v(" "),s("img",{attrs:{src:"/browser/v8.png",width:"800",height:"500"}}),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("foo出栈，AO(0x200)销毁； 剩余 GO(0xa00)、foo(0x100)\n"),s("img",{attrs:{src:"/browser/v8.png",width:"800",height:"500"}})])]),t._v(" "),s("hr"),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" bar\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",[s("li",[s("p",[t._v("GO(0xa00)、foo(0x100)、foo VO(0xa00)、bar(0x200)、bar VO(0xb00)\n"),s("img",{attrs:{src:"/browser/v8.png",width:"800",height:"500"}})])]),t._v(" "),s("li",[s("p",[t._v("GO(0xa00)、foo(0x100)、foo VO(0xa00)、bar(0x200)parentScope: parentScope(0xa00)\nfn(0x200)")])])]),t._v(" "),s("img",{attrs:{src:"/browser/v8.png",width:"800",height:"500"}}),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("fn = null 释放对bar(0x200)的释放、foo VO(0xa00)得到释放，foo = null 释放对foo(0x100)释放\n"),s("img",{attrs:{src:"/browser/v8.png",width:"800",height:"500"}})])])])}),[],!1,null,null,null);a.default=e.exports}}]);