(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{410:function(v,_,t){"use strict";t.r(_);var r=t(56),a=Object(r.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"chrome-架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chrome-架构"}},[v._v("#")]),v._v(" Chrome 架构")]),v._v(" "),t("p",[v._v("通过了解浏览器的多进程架构，将浏览器的网络流程、页面渲染过程、JavaScript 执行流程，以及 Web 安全等知识串联起来，组成一张网；有助于设计高性能 Web 应用，优化现有 Web 应用")]),v._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#进程-vs-线程"}},[v._v("进程 VS 线程")])]),t("li",[t("a",{attrs:{href:"#进程和线程的关系"}},[v._v("进程和线程的关系")])]),t("li",[t("a",{attrs:{href:"#单进程浏览器时代"}},[v._v("单进程浏览器时代")])]),t("li",[t("a",{attrs:{href:"#早期多进程架构"}},[v._v("早期多进程架构")])]),t("li",[t("a",{attrs:{href:"#目前的多进程架构"}},[v._v("目前的多进程架构")])]),t("li",[t("a",{attrs:{href:"#未来面向服务的架构"}},[v._v("未来面向服务的架构")])])])]),t("p"),v._v(" "),t("h3",{attrs:{id:"进程-vs-线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进程-vs-线程"}},[v._v("#")]),v._v(" 进程 VS 线程")]),v._v(" "),t("p",[t("code",[v._v("一个进程就是一个程序的运行实例")]),v._v("。启动一个程序的时候，操作系统就会为该程序创建一块内存，用来存放代码、运行中的数据和一个执行任务的主线程，我们把这样的一个运行环境叫进程。")]),v._v(" "),t("p",[v._v("线程是不能单独存在的，它是由进程来启动和管理的; 线程依附于进程，而进程中使用多线程并行处理能够提升运算效率")]),v._v(" "),t("h3",{attrs:{id:"进程和线程的关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进程和线程的关系"}},[v._v("#")]),v._v(" 进程和线程的关系")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("进程中的任意一线程执行出错，都会导致整个进程崩溃。")])]),v._v(" "),t("li",[t("code",[v._v("线程之间共享进程中的数据。")])]),v._v(" "),t("li",[t("code",[v._v("当一个进程关闭之后，操作系统会回收进程所占用的内容。当一个进程退出时，操作系统会回收该进程所申请的所有资源；即使是因为线程操作导致内存泄漏，当进程退出时，这些内存也会被正确回收")])]),v._v(" "),t("li",[t("code",[v._v("进程之间相互隔离。如果一个进程崩溃，或者挂起，不会影响到其他进程。进程间通信使用（IPC）机制")])])]),v._v(" "),t("h3",{attrs:{id:"单进程浏览器时代"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单进程浏览器时代"}},[v._v("#")]),v._v(" 单进程浏览器时代")]),v._v(" "),t("p",[t("code",[v._v("单进程浏览器是指浏览器的所有模块都运行在一个进程里")]),v._v(" , 线程包含了网络线程、页面线程（页面渲染、页面展示、JavaScript环境、插件）、其他线程")]),v._v(" "),t("p",[v._v("如此多的功能模块运行在一个进程里，导致单进程浏览器"),t("code",[v._v("不稳定")]),v._v("、"),t("code",[v._v("不流畅")]),v._v("和"),t("code",[v._v("不安全")])]),v._v(" "),t("ul",[t("li",[t("font",{attrs:{size:"3",color:"#dd0000"}},[v._v("1. 不稳定")])],1)]),v._v(" "),t("p",[v._v("插件的不稳定：早期借助插件来实现 Web 视频、Web 游戏等功能，但是一个插件的崩溃引起整个浏览器的崩溃")]),v._v(" "),t("p",[v._v("渲染引擎模块：通过 JavaScript 代码可能引起渲染引擎模块的崩溃。")]),v._v(" "),t("ul",[t("li",[t("font",{attrs:{size:"4",color:"#dd0000"}},[v._v("2. 不流畅")]),t("br"),v._v("\n所有页面的渲染模块、JavaScript 都是运行在一个线程中的，同一时刻只能有一个模块可以执行。可能发生独占整个线程，导致其他页面不能被执行")],1)]),v._v(" "),t("p",[v._v("页面的内存泄漏，运行一个复杂的页面关闭之后不能被完全回收的情")]),v._v(" "),t("ul",[t("li",[t("font",{attrs:{size:"3",color:"#dd0000"}},[v._v("3. 不安全")]),t("br"),v._v("\n通过插件可以获取到操作系统的任意资源, 当你在页面运行一个插件时也就意味着这个插件能完全操作你的电脑,可以释放病毒、窃取你的账号密码，引发安全性问题")],1)]),v._v(" "),t("p",[v._v("页面脚本，它可以通过浏览器的漏洞来获取系统权限，这些脚本获取系统权限之后也可以对你的电脑做一些恶意的事情")]),v._v(" "),t("h3",{attrs:{id:"早期多进程架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#早期多进程架构"}},[v._v("#")]),v._v(" 早期多进程架构")]),v._v(" "),t("p",[v._v("2008 年 Chrome 发布新的进程架构。")]),v._v(" "),t("p",[v._v("Chrome 架构被分为浏览器"),t("code",[v._v("主进程")]),v._v("（下载资源、管理IPC、显示渲染进程生成的图片）、"),t("code",[v._v("插件进程")]),v._v("、"),t("code",[v._v("渲染进程")]),v._v("（解析、渲染、JavaScript执行、合成网页图片），进程之间是通过 IPC 机制进行通信")]),v._v(" "),t("ul",[t("li",[t("p",[t("font",{attrs:{size:"3",color:"#dd0000"}},[v._v("1. 不稳定性解决")]),v._v("\n进程相互隔离，当一个页面或者插件崩溃，影响到的是当前页面进程或者插件进程，解决了牵一发而动全身，导致浏览器崩溃")],1)]),v._v(" "),t("li",[t("p",[t("font",{attrs:{size:"4",color:"#dd0000"}},[v._v("2. 不流畅性解决")]),t("br"),v._v("\nJavaScript 运行在渲染进程中，JavaScript 阻塞了渲染进程，影响到的知识当前的渲染进程")],1)])]),v._v(" "),t("p",[v._v("当关闭一个页面时，整个渲染进程也会被关闭，进程所分配的资源都会被系统回收")]),v._v(" "),t("ul",[t("li",[t("font",{attrs:{size:"3",color:"#dd0000"}},[v._v("3. 不安全性解决")]),t("br"),v._v("\n采用多进程架构，就以配合使用安全沙箱，操作系统给进程上锁。这样就不可以通过硬盘写入数据，也不能够读取敏感数据；恶意程序无法突破沙箱区获取系统权限")],1)]),v._v(" "),t("h3",{attrs:{id:"目前的多进程架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目前的多进程架构"}},[v._v("#")]),v._v(" 目前的多进程架构")]),v._v(" "),t("p",[v._v("最新的 Chrome 浏览器包括: 1 个"),t("code",[v._v("浏览器（Browser）主进程")]),v._v(", 1 个 "),t("code",[v._v("GPU 进程")]),v._v(", 1 个"),t("code",[v._v("网络（NetWork）进程")]),v._v("、多个"),t("code",[v._v("渲染进程")]),v._v("和多个"),t("code",[v._v("插件进程")])]),v._v(" "),t("ol",[t("li",[t("p",[t("font",{attrs:{size:"3",color:"#dd0000"}},[v._v("Browser进程(浏览器的主进程（负责协调、主控），只有一个)")]),t("br")],1),v._v(" "),t("ul",[t("li",[v._v("主要负责界面显示、用户交互、子进程管理，如前进，后退等。")]),v._v(" "),t("li",[v._v("负责各个页面的管理，创建和销毁其他进程")]),v._v(" "),t("li",[v._v("将Renderer进程得到的内存中的Bitmap，绘制到用户界面上")]),v._v(" "),t("li",[v._v("同时提供存储等功能。")])])]),v._v(" "),t("li",[t("p",[t("font",{attrs:{size:"3",color:"#dd0000"}},[v._v("插件进程：")]),v._v("插件进程来隔离.")],1)]),v._v(" "),t("li",[t("p",[t("font",{attrs:{size:"3",color:"#dd0000"}},[v._v("GPU 进程: ")]),v._v("GPU 的使用初衷是为了实现 3D CSS 的效果, 随后网页、Chrome 的 UI 界面都选择采用 GPU 来绘制,这使得 GPU 成为浏览器普遍的需求。最后，Chrome 在其多进程架构上也引入了 GPU 进程，最多一个。")],1)]),v._v(" "),t("li",[t("p",[t("font",{attrs:{size:"3",color:"#dd0000"}},[v._v("网络进程: ")]),v._v("负责页面的网络资源加载, 网络资源的管理，下载等.")],1)]),v._v(" "),t("li",[t("p",[t("font",{attrs:{size:"3",color:"#dd0000"}},[v._v("渲染进程：")]),v._v("内部是多线程的, 核心任务是将 HTML、CSS 和 JavaScript 转换为用户可以与之交互的网页，排版引擎 Blink 和 JavaScript 引擎 V8 都是运行在该进程中，默认情况下，Chrome 会为每个 Tab 标签创建一个渲染进程。出于安全考虑，渲染进程都是运行在沙箱模式下。页面渲染，脚本执行，事件处理等")],1)])]),v._v(" "),t("p",[v._v("打开了 1 个 Tab 页面，就需要 1 个Browser进程、 1 个网络进程、1 个 GPU 进程以及 1 个渲染进程，共 4 个；如果打开的页面有运行插件的话，还需要再加上 1 个插件进程。")]),v._v(" "),t("p",[v._v("多进程带来了许多的好处，也带来了相应的麻烦。")]),v._v(" "),t("ol",[t("li",[t("font",{attrs:{color:"#0000dd"}},[v._v("更高的资源占用。")]),v._v("每个进程都包含公共基础结构的副本（JavaScript运行环境），浏览器将消耗更多的内存资源")],1),v._v(" "),t("li",[t("font",{attrs:{color:"#0000dd"}},[v._v("更复杂的体系架构。")]),v._v("浏览器各模块之间耦合性高、扩展性差等问题，会导致现在的架构已经很难适应新的需求了")],1)]),v._v(" "),t("h3",{attrs:{id:"未来面向服务的架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#未来面向服务的架构"}},[v._v("#")]),v._v(" 未来面向服务的架构")]),v._v(" "),t("p",[v._v("2016 年, Chrome 官方团队使用"),t("code",[v._v("“面向服务的架构”")]),v._v("的思想设计了新的 Chrome 架构. Chrome 整体架构会朝向现代操作系统所采用的“面向服务的架构” 方向发展, 原来的各种模块会被重构成独立的服务（Service）。")]),v._v(" "),t("p",[v._v("以前是每个页面需要若干进程完成各自的工作，现在是将各个页面通用的功能（视频、网络、渲染）发布为系统服务，页面在需要的时候与相应的服务通信完成需要的功能。从而构建一个更内聚、松耦合、易于维护和扩展的系统")]),v._v(" "),t("p",[v._v("Chrome 最终要把 UI、数据库、文件、设备、网络等模块重构为基础服务, 类似操作系统底层服务.")]),v._v(" "),t("p",[v._v("同时 Chrome 还提供灵活的弹性架构, 将浏览器的程序每个程序部分作为一个服务运行, 可以将不同的进程进行拆分和合并。当Chrome在强大的硬件上运行的时候，为了稳定性它会将每个服务拆分到不同的进程，但是如果在一个资源有限的设备上，为了节省内存Chrome会将服务合并到一个进程。但是如果在资源受限的设备上，Chrome 会将很多服务整合到一个进程中，从而节省内存占用。")])])}),[],!1,null,null,null);_.default=a.exports}}]);