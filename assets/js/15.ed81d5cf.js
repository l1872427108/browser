(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{414:function(t,e,a){"use strict";a.r(e);var r=a(56),o=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"dom树构建过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom树构建过程"}},[t._v("#")]),t._v(" DOM树构建过程")]),t._v(" "),a("p",[t._v("从输入URL到加载中的解析篇 和 阻塞篇，要想懂得DOM树解析和CSS解析如何同步进行，如何阻塞，只有了解了 DOM 树如何解析才可以")]),t._v(" "),a("h3",{attrs:{id:"html-解析器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html-解析器"}},[t._v("#")]),t._v(" HTML 解析器")]),t._v(" "),a("p",[t._v("在渲染引擎内部，有一个 HTML 解析器（HTML Parser）的模块，负责将 HTML 字节流转为 DOM 结构。")]),t._v(" "),a("p",[t._v("HTML 解析器不需要等待整个文档加载完了在解析的（loading finish），而是网络进程加载了多少数据，HTML 解析器就解析多少数据。")]),t._v(" "),a("p",[t._v("在提交文档阶段，网络进程和渲染进程之间会建立一个共享数据的管道，网络进程接收到这个数据后就往这个管道里放，而渲染进程则从另一个端不断的读取数据，并交给 HTML 解析器来处理。所以，HTML Parser 接收一点解析一点(结合Chrome 的 Performance面板的事件日志来分析)")]),t._v(" "),a("h3",{attrs:{id:"生成步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成步骤"}},[t._v("#")]),t._v(" 生成步骤")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("通过分词器将字节流转换为 Token。 比如：通过分词器可以生成 Tag Token（Tag Token和文本Token）(可以结合V8的生成AST抽象语法章节来看)")])]),t._v(" "),a("li",[a("p",[t._v("将 Token 解析为 DOM 节点，并将 DOM 节点添加到 DOM 树中。这两个阶段是同步进行的。")])]),t._v(" "),a("li",[a("p",[t._v("通过游标的方式来匹配标签，并且通过维护一个 Token 栈结构，来维护节点之间的父子关系。")])])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("StartTag Token，HTML Parser 为该 Token 创建一个 DOM 节点。然后将该节点添加到 DOM 树中。")])]),t._v(" "),a("li",[a("code",[t._v("文本 Token，生成一个文本节点，添加到 DOM 树中，不需要压入栈中，父节点就是当前栈顶 Token 对应的 DOM 节点。")])]),t._v(" "),a("li",[a("code",[t._v("EndTag Token，查看栈顶元素是否是 StartTag，是，就弹出去，解析完成。")])]),t._v(" "),a("li",[a("code",[t._v("直到分词器将所有字节流分词完成。")])])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[a("p",[t._v("HTML Parser 开始工作时，会默认创建一个根 document 的空 DOM 结构。同时将一个 StartTag document 的 Token 压入栈中。并创建一个 html 的 DOM 节点，添加到 document 上。")])]),t._v(" "),a("li",[a("p",[t._v("当栈空的时候，DOM树随之生成了")])])]),t._v(" "),a("h3",{attrs:{id:"dom-的三个层面的作用。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom-的三个层面的作用。"}},[t._v("#")]),t._v(" DOM 的三个层面的作用。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("从页面的视角来看，DOM 是生成页面的基础数据结构.")])]),t._v(" "),a("li",[a("code",[t._v("从 js 脚本视角来看，DOM 提供给 js 脚本操作的接口，通过这套接口，js可以对 DOM 结构进行访问，从而改变文档的结构、样式和内容.")])]),t._v(" "),a("li",[a("code",[t._v("从安全视角来看，DOM 是一道安全防护线，一些不安全的内容在 DOM 解析阶段就会被拒绝。")])])])])}),[],!1,null,null,null);e.default=o.exports}}]);